import 'package:sonyalphacontrol/top_level_api/ids/setting_ids.dart';

extension SettingsIdExtension on SettingsId {
  String get name => toString().split('.')[1];

  int get value {
    switch (this) {
      case SettingsId.FileFormat:
        return 0x5004;
      case SettingsId.WhiteBalance:
        return 0x5005;
      case SettingsId.FNumber:
        return 0x5007;
      case SettingsId.FocusMode:
        return 0x500A;
      case SettingsId.MeteringMode:
        return 0x500B;
      case SettingsId.FlashMode:
        return 0x500C;
      case SettingsId.ShootingMode:
        return 0x500E;
      case SettingsId.EV:
        return 0x5010;
      case SettingsId.DriveMode:
        return 0x5013;
      case SettingsId.Flash:
        return 0xD200;
      case SettingsId.DroHdr:
        return 0xD201;
      case SettingsId.ImageSize:
        return 0xD203;
      case SettingsId.ShutterSpeed:
        return 0xD20D;
      case SettingsId.UnkD20E:
        return 0xD20E;
      case SettingsId.WhiteBalanceColorTemp:
        return 0xD20F;
      case SettingsId.WhiteBalanceGM:
        return 0xD210;
      case SettingsId.AspectRatio:
        return 0xD211;
      case SettingsId.UnkD212:
        return 0xD212;
      case SettingsId.AutoFocusState:
        return 0xD213;
      case SettingsId.Zoom:
        return 0xD214;
      case SettingsId.PhotoTransferQueue:
        return 0xD215;
      case SettingsId.AEL_State:
        return 0xD217;
      case SettingsId.BatteryInfo:
        return 0xD218;
      case SettingsId.SensorCrop:
        return 0xD219;
      case SettingsId.PictureEffect:
        return 0xD21B;
      case SettingsId.WhiteBalanceAB:
        return 0xD21C;
      case SettingsId.RecordVideoState:
        return 0xD21D;
      case SettingsId.ISO:
        return 0xD21E;
      case SettingsId.FEL_State:
        return 0xD21F;
      case SettingsId.LiveViewState:
        return 0xD221;
      case SettingsId.UnkD222:
        return 0xD222;
      case SettingsId.FocusArea:
        return 0xD22C;
      case SettingsId.FocusMagnifierPhase:
        return 0xD22D;
      case SettingsId.UnkD22E:
        return 0xD22E;
      case SettingsId.FocusMagnifier:
        return 0xD22F;
      case SettingsId.FocusMagnifierPosition:
        return 0xD230;
      case SettingsId.UseLiveViewDisplayEffect:
        return 0xD231;
      case SettingsId.FocusAreaSpot:
        return 0xD232;
      case SettingsId.FocusMagnifierState:
        return 0x5005;
      case SettingsId.FocusModeToggleResponse:
        return 0xD235;
      case SettingsId.UnkD236:
        return 0xD236;
      case SettingsId.HalfPressShutter:
        return 0xD2C1;
      case SettingsId.CapturePhoto:
        return 0xD2C2;
      case SettingsId.AEL:
        return 0xD2C3;
      case SettingsId.UnkD2C5:
        return 0xD2C5;
      case SettingsId.UnkD2C7:
        return 0xD2C7;
      case SettingsId.RecordVideo:
        return 0xD2C8;
      case SettingsId.FEL:
        return 0xD2C9;
      case SettingsId.FocusMagnifierRequest:
        return 0xD2CB;
      case SettingsId.FocusMagnifierResetRequest:
        return 0xD2CC;
      case SettingsId.FocusMagnifierMoveUpRequest:
        return 0xD2CD;
      case SettingsId.FocusMagnifierMoveDownRequest:
        return 0xD2CE;
      case SettingsId.FocusMagnifierMoveLeftRequest:
        return 0xD2CF;
      case SettingsId.FocusMagnifierMoveRightRequest:
        return 0xD2D0;
      case SettingsId.FocusDistance:
        return 0xD2D1;
      case SettingsId.FocusModeToggleRequest:
        return 0xD2D2;
      case SettingsId.UnkD2D3:
        return 0xD2D3; //manual focus?
      case SettingsId.UnkD2D4:
        return 0xD2D4; //??
      case SettingsId.Unknown:
        return -1;
      default:
        return -2;
    }
  }
}
